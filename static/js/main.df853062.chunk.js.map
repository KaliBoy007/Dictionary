{"version":3,"sources":["components/Header/Header.js","apis/wordsApi.js","history.js","components/SearchBar/SearchBar.js","actions/index.js","apis/KeysAndApiLinks.js","components/Data/asideContainer/asideContainer.js","components/Data/TotalData.js","components/Data/mainContainer/Definition/definitions.js","components/Data/mainContainer/Definition/defData.js","components/Data/mainContainer/Examples/examples.js","components/Data/mainContainer/Examples/exData.js","components/Data/mainContainer/Etymologies/etymologies.js","components/Data/mainContainer/Etymologies/etymoData.js","components/Error.js","components/App.js","reducers/index.js","reducers/defReducers.js","index.js"],"names":["Header","className","axios","create","baseURL","createBrowserHistory","SearchBar","state","word","onFormSubmit","event","preventDefault","setState","mainForm","reset","props","getDefinitions","alert","options","defaultOption","ref","element","onSubmit","this","id","type","autoComplete","onChange","target","value","required","to","onClick","Component","connect","term","dispatch","a","wordAPI","get","headers","app_id","app_key","response","payload","data","results","lexicalEntries","history","push","AsideContainer","TotalData","match","params","clcont","clcontainer","Definitions","keyid","i","map","definition","sentence","key","DefData","result","resultid","nestRemover","def","Array","isArray","forEach","Object","keys","nestRemoverId","definitions","length","Examples","example","ExData","modifiedResult","Set","Etymologies","etymology","EtymoData","Error","role","aria-label","App","path","exact","component","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.df853062.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <h1 className=\"header-container\">\n      The All In One Dictionary that you Need!\n    </h1>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\nexport default axios.create({\n  baseURL:\n    \"https://cors-anywhere.herokuapp.com/https://od-api.oxforddictionaries.com:443/api/v2/entries/en-gb\",\n});\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React, { Component } from \"react\";\nimport \"./SearchBar.css\";\nimport { connect } from \"react-redux\";\nimport { getDefinitions } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nclass SearchBar extends Component {\n  state = { word: null };\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    if (!this.state.word) {\n      alert(\"enter any text!\");\n      return;\n    } else {\n      this.setState({ word: \"\" });\n      this.mainForm.reset();\n      this.props.getDefinitions(this.state.word);\n    }\n  };\n  options = [\"Definitions\", \"Pronunciations\", \"Examples\"];\n  defaultOption = this.options[0];\n  render() {\n    return (\n      <div className=\"sbmain\">\n        <form\n          ref={(element) => (this.mainForm = element)}\n          className=\"sb-container\"\n          onSubmit={this.onFormSubmit}\n        >\n          <div className=\"sb-form\">\n            <input\n              id=\"maininput\"\n              type=\"text\"\n              autoComplete=\"off\"\n              className=\"sb-input\"\n              onChange={(event) => {\n                this.setState({ word: event.target.value });\n              }}\n              required\n            />\n            <label className=\"sb-label-name\">\n              <span className=\"sb-content-name\">Enter any word here!</span>\n            </label>\n          </div>\n\n          <div className=\"linkwrapper\">\n            <Link\n              to={`/Dictionary/${this.state.word}`}\n              className=\"sb-button button\"\n              onClick={this.onFormSubmit}\n            >\n              Search!\n            </Link>\n          </div>\n        </form>\n\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { getDefinitions })(SearchBar);\n","import wordAPI from \"../apis/wordsApi\";\nimport { APP_ID, APP_KEY } from \"../apis/KeysAndApiLinks\";\nimport history from \"../history\";\n//redux-thunk action creator\nexport const getDefinitions = (term) => async (dispatch) => {\n  try {\n    const response = await wordAPI.get(\n      `${term}?fields=definitions,pronunciations,examples,etymologies&strictMatch=false`,\n      {\n        headers: {\n          app_id: APP_ID,\n          app_key: APP_KEY,\n        },\n      }\n    );\n    dispatch({\n      type: \"DEFINITIONS\",\n      payload: response.data.results[0].lexicalEntries,\n    });\n\n    history.push(`/Dictionary/${term}`);\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: null,\n    });\n    history.push(\"/eRrOrXxX\");\n  }\n};\n","export const APP_ID = \"7bb08d93\";\nexport const APP_KEY = \"de97395e0b8634ff6cbb3d9767c69109\";\n","import React, { Component } from \"react\";\r\nimport \"./asideContainer.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AsideContainer extends Component {\r\n  render() {\r\n    return (\r\n      <aside>\r\n        <ul>\r\n          <li>\r\n            <Link to={`/Dictionary/${this.props.word}/definitions`}>\r\n              Definitions\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`/Dictionary/${this.props.word}/examples`}>Examples</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`/Dictionary/${this.props.word}/etymologies`}>\r\n              Etymologies\r\n            </Link>\r\n          </li>\r\n          <li>Pronunciations</li>\r\n        </ul>\r\n        <div className=\"instruct\">Click any one of 'em!!</div>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AsideContainer;\r\n","import React, { Component } from \"react\";\r\nimport AsideContainer from \"./asideContainer/asideContainer\";\r\nimport \"./TotalData.css\";\r\n\r\nclass TotalData extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"totalcontainer\">\r\n        <div className=\"totaldatacontainer\">\r\n          <AsideContainer\r\n            word={this.props.match ? this.props.match.params.word : \"\"}\r\n            clcont={this.clcontainer}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TotalData;\r\n","import React from \"react\";\n\nconst Definitions = ({ data, keyid }) => {\n  if (data) {\n    let i = 0;\n    return data.map((definition) => {\n      return definition.map((sentence) => {\n        return (\n          <div className=\"td-wrapper\" key={keyid[i++]}>\n            <div className=\"td-container\">{sentence}.</div>{\" \"}\n          </div>\n        );\n      });\n    });\n  }\n};\n\nexport default Definitions;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./dedata.css\";\nimport Definitions from \"./definitions\";\n\nclass DefData extends Component {\n  result = [];\n  resultid = [];\n  nestRemover = (def) => {\n    if (def) {\n      if (Array.isArray(def)) {\n        def.forEach(this.nestRemover);\n      } else if (typeof def === \"object\") {\n        Object.keys(def).forEach((key) => {\n          if (key === \"subsenses\") {\n            return;\n          }\n          if (key === \"definitions\") {\n            this.result.push(def[key]);\n          } else {\n            this.nestRemover(def[key]);\n          }\n        });\n      }\n    }\n  };\n  // ex = (def) => {\n  //   let ddef = def;\n  //   while (ddef) {\n  //     if (Array.isArray(ddef)) {\n  //       let exd = [];\n  //       ddef.forEach((element) => {\n  //         exd.push(element);\n  //       });\n  //       ddef = [];\n  //       ddef = exd;\n  //     } else if (typeof ddef === \"object\") {\n  //       Object.keys(ddef).forEach((key) => {\n  //         if (key === \"subsenses\") {\n  //           return;\n  //         }\n  //         if (key === \"definitions\") {\n  //           this.result.push(ddef[key]);\n  //           return;\n  //         } else {\n  //           ddef = ddef[key];\n  //         }\n  //       });\n  //     }\n  //   }\n  // };\n\n  nestRemoverId = (def) => {\n    if (def) {\n      if (Array.isArray(def)) {\n        def.forEach(this.nestRemoverId);\n      } else if (typeof def === \"object\") {\n        Object.keys(def).forEach((key) => {\n          if (key === \"id\") {\n            this.resultid.push(def[key]);\n          } else {\n            this.nestRemoverId(def[key]);\n          }\n        });\n      }\n    }\n  };\n\n  render() {\n    this.result = [];\n    this.resultid = [];\n    this.nestRemover(this.props.definitions);\n    this.nestRemoverId(this.props.definitions);\n    if (this.result.length > 0) {\n      return (\n        <div className=\"def-container\">\n          <Definitions data={this.result} keyid={this.resultid} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"ntg-container\">\n          😕Nothing to show here.Search anything different or reload the page!😕\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { definitions: state.definitions };\n};\nexport default connect(mapStateToProps)(DefData);\n","import React from \"react\";\n\nconst Examples = ({ data, keyid }) => {\n  if (data) {\n    let i = 0;\n    return data.map((example) => {\n      return (\n        <div className=\"td-wrapper\" key={keyid[i++]}>\n          <div className=\"td-container\">{example}.</div>\n        </div>\n      );\n    });\n  }\n};\n\nexport default Examples;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../Definition/dedata.css\";\nimport Examples from \"./examples\";\n\nclass ExData extends Component {\n  result = [];\n  resultid = [];\n  nestRemover = (def) => {\n    if (def) {\n      if (Array.isArray(def)) {\n        def.forEach(this.nestRemover);\n      } else if (typeof def === \"object\") {\n        Object.keys(def).forEach((key) => {\n          if (key === \"text\") {\n            if (\n              def[key] !== \"Noun\" &&\n              def[key] !== \"Verb\" &&\n              def[key] !== \"Interjection\" &&\n              def[key] !== \"Conjunction\"\n            ) {\n              this.result.push(def[key]);\n            }\n          } else {\n            this.nestRemover(def[key]);\n          }\n        });\n      }\n    }\n  };\n  // ex = (def) => {\n  //   let ddef = def;\n  //   while (ddef) {\n  //     if (Array.isArray(ddef)) {\n  //       let exd = [];\n  //       ddef.forEach((element) => {\n  //         exd.push(element);\n  //       });\n  //       ddef = [];\n  //       ddef = exd;\n  //     } else if (typeof ddef === \"object\") {\n  //       Object.keys(ddef).forEach((key) => {\n  //         if (key === \"subsenses\") {\n  //           return;\n  //         }\n  //         if (key === \"definitions\") {\n  //           this.result.push(ddef[key]);\n  //           return;\n  //         } else {\n  //           ddef = ddef[key];\n  //         }\n  //       });\n  //     }\n  //   }\n  // };\n\n  nestRemoverId = (def) => {\n    if (def) {\n      if (Array.isArray(def)) {\n        def.forEach(this.nestRemoverId);\n      } else if (typeof def === \"object\") {\n        Object.keys(def).forEach((key) => {\n          if (key === \"id\") {\n            this.resultid.push(def[key]);\n          } else {\n            this.nestRemoverId(def[key]);\n          }\n        });\n      }\n    }\n  };\n  modifiedResult = (result) => {\n    this.result = [...new Set(result)];\n  };\n  render() {\n    this.result = [];\n    this.resultid = [];\n    this.nestRemover(this.props.definitions);\n    this.nestRemoverId(this.props.definitions);\n    this.modifiedResult(this.result);\n    if (this.result.length > 0) {\n      return (\n        <div className=\"def-container\">\n          <Examples data={this.result} keyid={this.resultid} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"ntg-container\">\n          😕Nothing to show here.Search anything different or reload the page!😕\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { definitions: state.definitions };\n};\nexport default connect(mapStateToProps)(ExData);\n","import React from \"react\";\n\nconst Etymologies = ({ data, keyid }) => {\n  if (data) {\n    let i = 0;\n    return data.map((etymology) => {\n      return (\n        <div className=\"td-wrapper\" key={keyid[i++]}>\n          <div className=\"td-container\">{etymology}.</div>{\" \"}\n        </div>\n      );\n    });\n  }\n};\n\nexport default Etymologies;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../Definition/dedata.css\";\nimport Etymologies from \"./etymologies\";\n\nclass EtymoData extends Component {\n  result = [];\n  resultid = [];\n  nestRemover = (def) => {\n    if (def) {\n      if (Array.isArray(def)) {\n        def.forEach(this.nestRemover);\n      } else if (typeof def === \"object\") {\n        Object.keys(def).forEach((key) => {\n          if (key === \"etymologies\") {\n            this.result.push(def[key]);\n          } else {\n            this.nestRemover(def[key]);\n          }\n        });\n      }\n    }\n  };\n  // ex = (def) => {\n  //   let ddef = def;\n  //   while (ddef) {\n  //     if (Array.isArray(ddef)) {\n  //       let exd = [];\n  //       ddef.forEach((element) => {\n  //         exd.push(element);\n  //       });\n  //       ddef = [];\n  //       ddef = exd;\n  //     } else if (typeof ddef === \"object\") {\n  //       Object.keys(ddef).forEach((key) => {\n  //         if (key === \"subsenses\") {\n  //           return;\n  //         }\n  //         if (key === \"definitions\") {\n  //           this.result.push(ddef[key]);\n  //           return;\n  //         } else {\n  //           ddef = ddef[key];\n  //         }\n  //       });\n  //     }\n  //   }\n  // };\n\n  nestRemoverId = (def) => {\n    if (def) {\n      if (Array.isArray(def)) {\n        def.forEach(this.nestRemoverId);\n      } else if (typeof def === \"object\") {\n        Object.keys(def).forEach((key) => {\n          if (key === \"id\") {\n            this.resultid.push(def[key]);\n          } else {\n            this.nestRemoverId(def[key]);\n          }\n        });\n      }\n    }\n  };\n\n  render() {\n    this.result = [];\n    this.resultid = [];\n    this.nestRemover(this.props.definitions);\n    this.nestRemoverId(this.props.definitions);\n    if (this.result.length > 0) {\n      return (\n        <div className=\"def-container\">\n          <Etymologies data={this.result} keyid={this.resultid} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"ntg-container\">\n          😕Nothing to show here.Search anything different or reload the page!😕\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { definitions: state.definitions };\n};\nexport default connect(mapStateToProps)(EtymoData);\n","import React from \"react\";\n\nconst Error = () => {\n  return (\n    <div className=\"er-container\">\n      <div className=\"er-wrapper\">\n        <div className=\"err-container\">\n          <span role=\"img\" aria-label=\"faint\">\n            😵\n          </span>\n          Sorry! No match Found!\n          <span role=\"img\" aria-label=\"faint\">\n            😵\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { Component } from \"react\";\nimport Header from \"./Header/Header\";\nimport SearchBar from \"./SearchBar/SearchBar\";\n//import DefData from \"../components/Data/defData\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport TotalData from \"./Data/TotalData\";\nimport DefData from \"../components/Data/mainContainer/Definition/defData\";\nimport ExData from \"../components/Data/mainContainer/Examples/exData\";\nimport EtymoData from \"../components/Data/mainContainer/Etymologies/etymoData\";\nimport history from \"../history\";\nimport Error from \"./Error\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Router history={history}>\n          <div className=\"app-container\">\n            <Header />\n            <SearchBar />\n          </div>\n          <Route path={\"/eRrOrXxX\"} exact component={Error} />\n          <Switch>\n            <Route path=\"/Dictionary/:word\" component={TotalData} />\n          </Switch>\n          <Route path={\"/Dictionary/:word/definitions\"} component={DefData} />\n          <Route path={\"/Dictionary/:word/examples\"} component={ExData} />\n          <Route path={\"/Dictionary/:word/etymologies\"} component={EtymoData} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport defReducer from \"./defReducers\";\n\nexport default combineReducers({\n  definitions: defReducer,\n});\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case \"DEFINITIONS\":\n      return action.payload;\n    case \"ERROR\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}