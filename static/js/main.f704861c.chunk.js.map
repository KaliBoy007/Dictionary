{"version":3,"sources":["components/Header/Header.js","apis/wordsApi.js","components/SearchBar/SearchBar.js","actions/index.js","apis/KeysAndApiLinks.js","components/Data/defData.js","components/App.js","reducers/index.js","reducers/defReducers.js","index.js"],"names":["Header","className","axios","create","baseURL","SearchBar","state","word","onFormSubmit","event","preventDefault","props","getDefinitions","setState","mainForm","reset","alert","ref","element","onSubmit","this","id","type","autoComplete","onChange","target","value","href","onClick","Component","connect","definitions","term","dispatch","a","wordAPI","get","headers","app_id","app_key","response","payload","data","results","lexicalEntries","DefData","result","resultid","nestRemover","def","Array","isArray","forEach","Object","keys","key","push","nestRemoverId","Definitions","keyid","i","map","definition","sentence","console","log","App","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f704861c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <h1 className=\"header-container\">\n      The All In One Dictionary that you Need!!\n    </h1>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\nexport default axios.create({\n  baseURL:\n    \"https://cors-anywhere.herokuapp.com/https://od-api.oxforddictionaries.com:443/api/v2/entries/en-gb\",\n});\n","import React, { Component } from \"react\";\nimport \"./SearchBar.css\";\nimport { connect } from \"react-redux\";\nimport { getDefinitions } from \"../../actions\";\nclass SearchBar extends Component {\n  state = { word: null };\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    if (!this.state.word) {\n      alert(\"enter any text!\");\n      return;\n    } else {\n      this.props.getDefinitions(this.state.word);\n      this.setState({ word: \"\" });\n      this.mainForm.reset();\n    }\n  };\n  render() {\n    return (\n      <>\n        <form\n          ref={(element) => (this.mainForm = element)}\n          className=\"sb-container\"\n          onSubmit={this.onFormSubmit}\n        >\n          <div className=\"sb-form\">\n            <input\n              id=\"maininput\"\n              type=\"text\"\n              autoComplete=\"off\"\n              className=\"sb-input\"\n              onChange={(event) => {\n                this.setState({ word: event.target.value });\n              }}\n            />\n            <label className=\"sb-label-name\">\n              <span className=\"sb-content-name\">Enter any word here!</span>\n            </label>\n          </div>\n          <a href=\"/\" className=\"sb-button\" onClick={this.onFormSubmit}>\n            Search!\n          </a>\n        </form>\n        <br />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { definitions: state.definitions };\n};\n\nexport default connect(mapStateToProps, { getDefinitions })(SearchBar);\n","import wordAPI from \"../apis/wordsApi\";\nimport { APP_ID, APP_KEY } from \"../apis/KeysAndApiLinks\";\n\n//redux-thunk action creator\nexport const getDefinitions = (term) => async (dispatch) => {\n  try {\n    const response = await wordAPI.get(\n      `${term}?fields=definitions&strictMatch=false`,\n      {\n        headers: {\n          app_id: APP_ID,\n          app_key: APP_KEY,\n        },\n      }\n    );\n    dispatch({\n      type: \"DEFINITIONS\",\n      payload: response.data.results[0].lexicalEntries,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: null,\n    });\n  }\n};\n","export const APP_ID = \"7bb08d93\";\nexport const APP_KEY = \"de97395e0b8634ff6cbb3d9767c69109\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n//import Definitions from \"./definitions\";\nimport \"./dedata.css\";\n\nclass DefData extends Component {\n  result = [];\n  resultid = [];\n  nestRemover = (def) => {\n    if (def) {\n      if (Array.isArray(def)) {\n        def.forEach(this.nestRemover);\n      } else if (typeof def === \"object\") {\n        Object.keys(def).forEach((key) => {\n          if (key === \"subsenses\") {\n            return;\n          }\n          if (key === \"definitions\") {\n            this.result.push(def[key]);\n          } else {\n            this.nestRemover(def[key]);\n          }\n        });\n      }\n    }\n  };\n  // ex = (def) => {\n  //   let ddef = def;\n  //   while (ddef) {\n  //     if (Array.isArray(ddef)) {\n  //       let exd = [];\n  //       ddef.forEach((element) => {\n  //         exd.push(element);\n  //       });\n  //       ddef = [];\n  //       ddef = exd;\n  //     } else if (typeof ddef === \"object\") {\n  //       Object.keys(ddef).forEach((key) => {\n  //         if (key === \"subsenses\") {\n  //           return;\n  //         }\n  //         if (key === \"definitions\") {\n  //           this.result.push(ddef[key]);\n  //           return;\n  //         } else {\n  //           ddef = ddef[key];\n  //         }\n  //       });\n  //     }\n  //   }\n  // };\n\n  nestRemoverId = (def) => {\n    if (def) {\n      if (Array.isArray(def)) {\n        def.forEach(this.nestRemoverId);\n      } else if (typeof def === \"object\") {\n        Object.keys(def).forEach((key) => {\n          if (key === \"id\") {\n            this.resultid.push(def[key]);\n          } else {\n            this.nestRemoverId(def[key]);\n          }\n        });\n      }\n    }\n  };\n\n  Definitions = (data, keyid) => {\n    if (data) {\n      let i = 0;\n      return data.map((definition) => {\n        return definition.map((sentence) => {\n          return (\n            <div className=\"td-wrapper\" key={keyid[i++]}>\n              <div className=\"td-container\">{sentence}.</div>\n              <br />\n            </div>\n          );\n        });\n      });\n    } else {\n      return <div className=\"td-container\">Sorry! No Match!</div>;\n    }\n  };\n\n  render() {\n    this.nestRemover(this.props.definitions);\n    this.nestRemoverId(this.props.definitions);\n    console.log(this.props.definitions);\n    if (this.props.definitions) {\n      return (\n        <div className=\"def-container\">\n          {this.Definitions(this.result, this.resultid)}\n          {/* <Definitions data={this.result} keyid={this.resultid} /> */}\n        </div>\n      );\n    } else {\n      return <div className=\"def-container\">Sorry! No match Found!</div>;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { definitions: state.definitions };\n};\nexport default connect(mapStateToProps)(DefData);\n","import React, { Component } from \"react\";\nimport Header from \"./Header/Header\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport DefData from \"../components/Data/defData\";\n//import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Header />\n        <SearchBar />\n        <DefData />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport defReducer from \"./defReducers\";\n\nexport default combineReducers({\n  definitions: defReducer,\n});\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case \"DEFINITIONS\":\n      return action.payload;\n    case \"ERROR\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}